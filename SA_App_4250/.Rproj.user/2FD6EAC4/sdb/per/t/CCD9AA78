{
    "contents" : "library(dplyr)\nlibrary(cluster)\nlibrary(zoo)\n\n##########\n##########\n### data preparation\n\n# predefined parameters\ntrain.start <- as.Date(\"2015-5-1\")\ntest.start <- as.Date(\"2015-8-1\")\ntest.end <- as.Date(\"2015-8-31\")\ntrain.period <- data.frame(Date = seq(train.start, test.start, \"day\"))\ntrain.period$DOW <- as.POSIXlt(train.period$Date)$wday\ntest.period <- data.frame(Date = seq(test.start, test.end, \"day\"))\ntest.period$DOW <- as.POSIXlt(test.period$Date)$wday\n\nparam.days <- GetNumberDays(train.period)\n\n# !!! get running time\nstart.time <- Sys.time()\n\ntrx <- transaction4 %>% filter(Date >= train.start & Date < test.end)\n\n# add SensEntr, SensSor\ntrx <- trx %>% mutate(Voie = ifelse(Entr == 0, Voie, 0))\ntrx <- trx %>% left_join(sens)\ntrx <- trx %>% mutate(SensEntr = ifelse(is.na(SensEntr), 0, SensEntr),\n                      SensSor = ifelse(is.na(SensSor), 0, SensSor))\n\n# combine OD to create trajet\n# trx <- Sens(trx)\n# trx <- SO(trx)\ntrx <- inverse.after.SO(trx)\n\ntrx <- trx %>% mutate(OD = paste0(Entr,\"-\",Sor,\"-\",SensEntr,\"-\",SensSor))\n\n# construct train & test set\ntrain <- trx %>% filter(Date < test.start)\ntest <- trx %>% filter(Date >= test.start)\n\n# get the ID list\nID.list <- trx %>% group_by(ID) %>% summarise()\n\n# !!! get running time\nend.time.preparation <- Sys.time()\n\n########\n#Find the number max of cluster by the density of TimeSor over 24h\n# For each person\n# NbClusterMax <- getNbClusterMax( train )\n### ??? trx or train\nmodels.units <- getModel.units( trx )\n# train <- inverse.after.SO(train)\n# test <- inverse.after.SO(test)\n\n#Model 0 (decades) : BENCHMARK\nresult.model.decade.0 <- Model.for.a.decade(train,0,models.units)\n# !!! get running time\nend.time.model.0 <- Sys.time()\n#Model 1 (decades)\tTime-Space\nresult.model.decade.1 <- Model.for.a.decade(train,1,models.units)\n#Model 2 (decades) OD -> Space -> Time\nresult.model.decade.2 <- Model.for.a.decade(train,2,models.units)\n\n##########\n# evaluation\n##########\n####################\n####################\n### evalutaion model.00\ntest.model.0 <- GetResult(test, result.model.decade.0)\ntest.model.0$ModelDecade <- 0\nind.model.0 <- GetInd(test.model.0, result.model.decade.0)\nind.model.0$ModelDecade <- 0\n### evalutaion model.01\ntest.model.1 <- GetResult(test, result.model.decade.1)\ntest.model.1$ModelDecade <- 1\nind.model.1 <- GetInd(test.model.1, result.model.decade.1)\nind.model.1$ModelDecade <- 1\n### evalutaion model.02\ntest.model.2 <- GetResult(test, result.model.decade.2)\ntest.model.2$ModelDecade <- 2\nind.model.2 <- GetInd(test.model.2, result.model.decade.2)\nind.model.2$ModelDecade <- 2\n\n\n##########\n# compare model results\n##########\nInd <- rbind(ind.model.0, ind.model.1, ind.model.2)\nInd <- inner_join ( Ind, models.units)\n\nInd.final <- Ind %>% \n  group_by(ID) %>% \n  summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])\n\nresult <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)\n\nresult.final <- inner_join(result, Ind.final)\n# write.table(result.final, file=\"result.csv\", sep = \";\", row.names = F, quote = F)\n\nresult.final$Model <- NULL\n\nresult.final <- result.final %>%\n  arrange (ID, desc(noPsg), Tmin) %>%\n  filter(noPsg > 5)\n# write.table(result.final.treated, file=\"result.treated.csv\", sep = \";\", row.names = F, quote = F)\n\n### other action\n# temp1 <- ref %>% transmute(ID = as.character(Nom), N.badge = paste0(Ste,N.badge), EVA)\ntemp <- result.final %>% \n  arrange (ID, desc(noPsg), Tmin) %>%\n  filter((Tmax - Tmin) <= 1.5)\n\nID.list <- trx %>% group_by(ID,Badge,EVA) %>% summarise() \ntemp <- inner_join(ID.list, temp)\n\n# output: csv file\nwrite.table(temp, file=\"result.treated.csv\", sep = \";\", row.names = F, quote = F)\n\n\n# !!! get running time\nend.time <- Sys.time()\n\ntime.taken.preparation <- end.time.preparation - start.time\ntime.taken.model.0 <- end.time.model.0 -  end.time.preparation\ntime.taken <- end.time - end.time.model.0\ntime.taken.preparation \ntime.taken.model.0     \ntime.taken  # 11.54938 mins\n",
    "created" : 1443636181816.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "730714354",
    "id" : "CCD9AA78",
    "lastKnownWriteTime" : 1445355241,
    "path" : "~/SVN/App_4250/App_4250_end2end.R",
    "project_path" : "App_4250_end2end.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}