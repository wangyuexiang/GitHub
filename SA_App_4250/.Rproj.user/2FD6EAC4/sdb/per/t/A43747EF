{
    "contents" : "##########\n### 4250 abonnes app VA\n##########\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n##########\n### BDD\n##########\nsens = read.table(\"Ref_sens.csv\",sep = \";\", header=TRUE)\nJF = read.table(\"Ref_JF.csv\",sep = \";\", header=TRUE)\n\n##########\n### DOW\n##########\ntrain.start <- as.Date(\"2015-5-1\")\ntest.start <- as.Date(\"2015-8-1\")\ntest.end <- as.Date(\"2015-8-31\")\n\n\n##########\n### input\n##########\ntransaction <- read.table(\"BDD.csv\", header = T, sep = \";\")\ntransaction <- tbl_df(transaction)\n\nnames(transaction) <- c(\"EVA\",\"Badge\",\n                         \"cde_soc_entr\",\"cde_entr\", \"heure_entr\",\n                         \"cde_soc_sor\",\"cde_sor\", \"heure_sor\",\n                         \"Voie\")\n\nstr(transaction)\n\n# some gares are with cde_soc_entr as character, just removed\ntemp <- transaction %>%\n  mutate(\n    cde_soc_entr = as.numeric(as.character(cde_soc_entr)),\n    cde_soc_sor = as.numeric(as.character(cde_soc_sor)),\n    heure_entr = as.character(heure_entr),\n    heure_sor = as.character(heure_sor)) %>%\n  filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))\n\n# remove cde_soc_sor == A1 - A7, Z2\n\ntemp <- temp %>%\n  mutate(\n    Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,\n    Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,\n    Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),\n    Date = as.Date(paste0(Y, \"-\", M, \"-\", D)),\n    DOW = as.POSIXlt(Date)$wday,\n    WOY = as.numeric(format(Date+3, \"%U\")),\n    HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,\n    TimeEntr = HH + MM / 60,\n    HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,\n    TimeSor = HH + MM / 60\n  ) %>%\n  select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor) \n\ntemp$Entr[temp$cde_entr==0] <- 0\ntemp$TimeEntr[temp$cde_entr==0] <- 0\n\ntransaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)\nrm(temp)\n\ntransaction1 <- transaction1 %>% filter(Date >= as.Date(\"2015-1-1\"))\ntransaction1 <- transaction1 %>% mutate(Sens = ifelse(Entr == 0,\n                                                      ifelse(Voie <=20, 1,2),\n                                                      0))\n##########\n### ID\n##########\nID <- transaction1 %>% \n  group_by(Badge) %>% \n  summarise(Dmin = min(Date), \n            Dmax = max(Date), \n            Ddiff = Dmax - Dmin + 1, \n            Day = n_distinct(Date), \n            noPsg = n()) %>%\n  arrange(desc(noPsg)) %>%\n  mutate(ID = as.character(row_number())) \n\ntemp <- ID %>% select(ID, Badge)\ntransaction1 <- inner_join(temp,transaction1)\nrm(temp)\n\n##########\n### transaction 2 <- period\n##########\ntransaction2 <- transaction1 %>% filter(Date >= train.start)\n\n# period <- data.frame(Date = seq(train.start, test.end, \"day\"))\nt1 <- data.frame(Date = seq(train.start, test.end, \"day\")) %>% transmute(Dmin = Date, t=1)\nt2 <- t1 %>% rename(Dmax = Dmin)\nt <- inner_join(t1,t2) %>% filter(Dmin < Dmax) %>% select(-t) %>% tbl_df\n\nt1 <- data.frame(D0 = 0,\n                 D1 = 0,\n                 D2 = 0,\n                 D3 = 0,\n                 D4 = 0,\n                 D5 = 0,\n                 D6 = 0,\n                 Day = 0\n)\nfor(i in 1:nrow(t)){\n  temp <- GetDays(t$Dmin[i],t$Dmax[i])\n  t1 <- rbind(t1,temp)\n}\n\nt1 <- t1[-1,]\nperiod <- cbind(t, t1 ) %>% tbl_df\nrm(t,t1,t2)\n\n\n##########\n### ID2 <- period\n##########\nID2 <- transaction2 %>% \n  group_by(ID) %>% \n  summarise(Dmin = min(Date), \n            Dmax = max(Date), \n            Ddiff = Dmax - Dmin + 1, \n            Day = n_distinct(Date), \n            noPsg = n()) %>%\n  arrange(desc(noPsg))\n\nID2 <- left_join(ID2,period %>% select(-Day))\n\n##########\n### ID2 - segmentation\n##########\n### add small =\n#   F:  history interesting\n#   T:  nOD < 10            \n#       Day < 5 \n#       Ddiff < 5\nID2$Small <- FALSE\nID2$Small[ID2$noPsg < 10 | ID2$Day < 5 | ID2$Ddiff < 5] <- TRUE\n### add Inactive =\n#   F: always active\n#   T: no trx after 2015/8/1\nID2$Inactive <- FALSE\nID2$Inactive[ID2$Dmax < as.Date(\"2015/8/1\")] <- TRUE\n\n##########\n### ID3 --> transaction3 --> ID.OD3\n##########\nID3 <- ID2 %>%\n  filter(Small == FALSE, Inactive == FALSE) %>%\n  select(-c(Small, Inactive))\n\nt <- ID3 %>% select(ID)\ntransaction3 <- inner_join(transaction2, t)\n\nID.OD3 <- transaction3 %>%\n  group_by(ID, Entr, Sor, Sens) %>% \n  summarise(Dmin = min(Date), \n            Dmax = max(Date), \n            Ddiff = Dmax - Dmin + 1, \n            Day = n_distinct(Date), \n            noPsg = n(),\n            \n            R0 = sum(DOW == 0),\n            R1 = sum(DOW == 1 & JF == 0),\n            R2 = sum(DOW == 2 & JF == 0),\n            R3 = sum(DOW == 3 & JF == 0),\n            R4 = sum(DOW == 4 & JF == 0),\n            R5 = sum(DOW == 5 & JF == 0),\n            R6 = sum(DOW == 6)\n  ) \n\nID.OD3 <- ID.OD3 %>%\n  ungroup() %>%\n  group_by(ID) %>%\n  arrange(desc(noPsg)) %>%\n  mutate(ord = row_number())\n\nt <- ID3 %>% transmute(ID, Total = noPsg)\nID.OD3 <- inner_join(ID.OD3,t)\n\nID.OD3 <- ID.OD3 %>% \n  mutate(Per = noPsg / Total,\n         noPsgbyDay = noPsg / Day)\n\nt <- transaction3 %>%\n  group_by(ID) %>%\n  summarise(Wmin = min(WOY),\n            Wmax = max(WOY),\n            Wdiff = Wmax - Wmin + 1, \n            Week = n_distinct(WOY)\n            )\n\nt <- t %>% mutate(ActiveW = Week/ Wdiff)\n##########\n### ID.OD3 --> \n##########\nt1 <- ID.OD3 %>%\n  summarise(\n    Total = max(Total),\n    noOD = max(ord),\n    maxNoPsg = max(noPsg),\n    maxNoPsgbyDay = ceiling(max(noPsgbyDay)),\n    maxPer = max(Per),\n    Psg100 = sum(noPsg >= 100),\n    Psg50 = sum(noPsg >= 50 & noPsg < 100),\n    Psg10 = sum(noPsg >= 10 & noPsg < 50),\n    Psg5 = sum(noPsg >= 5 & noPsg < 10),\n    Psg2 = sum(noPsg >= 2 & noPsg < 5),\n    Psg1 = sum(noPsg == 1)\n  )\n\ncount(t1,maxNoPsgbyDay) # frequently used trajet\ncount(t1, Psg1 == noOD) # only small trajet\ncount(t1, sum(Psg1,Psg2,Psg5) == noOD)\n\nggplot(ID.OD3) + geom_bar(aes(as.numeric(ID), fill = noPsg), binwidth = 1)\n\n\nID.OD3 <- ID.OD3 %>% mutate(Label = ifelse(noPsg>=100, \n                                           100,\n                                           ifelse(noPsg >= 50,\n                                                  50,\n                                                  ifelse(noPsg >= 10,\n                                                         10,\n                                                         ifelse(noPsg >= 5,\n                                                                5,\n                                                                ifelse(noPsg >=2,\n                                                                       2,\n                                                                       1))))))\n\nggplot(ID.OD3) + \n  geom_bar(aes(as.numeric(ID), fill = as.factor(Label)), binwidth = 1) +\n  coord_flip()\n\n\nID.Entr3\n\n##########\n### test\n##########\nt <- ID.OD3 \n##########\n### t\n### add small =\n#   F:  history interesting\n#   T:  nOD < 10            \n#       Day < 5 \n#       Ddiff < 5\nt$Small <- FALSE\nt$Small[t$noPsg < 5 | t$Day < 5 | t$Ddiff < 5] <- TRUE\n### add Inactive =\n#   F: always active\n#   T: no trx after 2015/8/1\nt$Inactive <- FALSE\nt$Inactive[t$Dmax < as.Date(\"2015/8/1\")] <- TRUE\n\nID.OD4 <- t %>%\n  filter(Small == FALSE & Inactive == FALSE) %>%\n  select(ID,Entr,Sor,Sens)\n\ntransaction4 <- inner_join(transaction3,ID.OD4)\n",
    "created" : 1443517503267.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "7389568",
    "id" : "A43747EF",
    "lastKnownWriteTime" : 1443637769,
    "path" : "~/SVN/App_4250/App_4250_data_preparation.R",
    "project_path" : "App_4250_data_preparation.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}