Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor )
transaction1
transaction1$Badge[1]
transaction1$Badge[1] %>% print(n=16)
transaction1$Badge[1] %>% print(digits=16)
transaction <- read.table("BDD.csv", header = T, sep = ";")
transaction <- tbl_df(transaction)
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
# str(transaction)
# some gares are with cde_soc_entr as character, just removed
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
# remove cde_soc_sor == A1 - A7, Z2
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
transaction1
write.table(transaction1,"Input_v20151126.csv",sep=",",row.name=FALSE,quote=FALSE)
summary(transaction1)
InputFileName = "Input_v20151126.csv"
InputFileName
transaction <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
summary(transaction)
write.table(transaction1,"Input_v20151126.csv",sep=";",row.name=FALSE,quote=FALSE)
transaction <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
summary(transaction)
str(transaction)
t <- transaction %>%
mutate(Date = as.Date(as.character(Date)))
t1 <- t %>% filter(Date >= train.start & Date <= test.end)
t1
library(zoo)
install.packages("zoo")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
t
transaction
transaction
library(dplyr)
library(cluster)
class(transaction)
transaction
t <- transaction %>%
mutate(
ID = as.character(Badge),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
t
str(trx)
transaction <- read.table("BDD.csv", header = T, sep = ";")
transaction <- tbl_df(transaction)
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
transaction1 <- transaction1 %>% filter(Date >= as.Date("2015-1-1"))
transaction1 <- transaction1 %>% mutate(Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
transaction1
ID <- transaction1 %>%
group_by(Badge) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n()) %>%
arrange(desc(noPsg)) %>%
mutate(ID = as.character(row_number()))
temp <- ID %>% select(ID, Badge)
transaction1 <- inner_join(temp,transaction1)
rm(temp)
ID
transaction1
transaction2 <- transaction1 %>% filter(Date >= train.start)
transaction2
transaction2 %>% count(ID)
transaction1 %>% count(ID)
ID2 <- transaction2 %>%
group_by(ID) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n()) %>%
arrange(desc(noPsg))
ID2 <- left_join(ID2,period %>% select(-Day))
ID2
ID2$Small <- FALSE
ID2$Small[ID2$noPsg < 10 | ID2$Day < 5 | ID2$Ddiff < 5] <- TRUE
### add Inactive =
#   F: always active
#   T: no trx after 2015/8/1
ID2$Inactive <- FALSE
ID2$Inactive[ID2$Dmax < as.Date("2015/8/1")] <- TRUE
ID2
ID3 <- ID2 %>%
filter(Small == FALSE, Inactive == FALSE) %>%
select(-c(Small, Inactive))
ID3
t <- ID3 %>% select(ID)
transaction3 <- inner_join(transaction2, t)
transaction3 %>% count(ID)
period
BDD
transaction
library(dplyr)
transaction2
transaction
t <- transaction[2,1]
t <- transaction[1,2]
t
substr(t, 1,5)
substr(t, 6,17)
transaction1
count(transaction1, ID)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
Badge = substr(Badge,6,12)
)
t
str(t)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
Badge = substr(Badge,6,17)
)
transaction <- read.table("BDD.csv", header = T, sep = ";")
transaction <- tbl_df(transaction)
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
# str(transaction)
# some gares are with cde_soc_entr as character, just removed
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
# remove cde_soc_sor == A1 - A7, Z2
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
count(trqnsqctions1)
count(transaction1,ID)
transaction
temp
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
# remove cde_soc_sor == A1 - A7, Z2
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
temp
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
transaction1
transaction1 %>% count(ID)
transaction1 %>% count(Badge)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
Badge = substr(Badge,6,17)
)
t
count(t,Badge)
str(Badge)
str(t)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
Badge = substr(Badge,6,17),
ID = Badge
)
t
str(t)
write.table(t, "App.csv",sep=";",row.name=FALSE,quote=FALSE)
t
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
Badge = substr(Badge,6,17)
)
t
count(t,Badge)
t %>% count(Badge, Ste)
t %>% count(Badge, Ste) %>% count(Badge)
t %>% count(Badge, Ste) %>% count(Badge) %>% filter(n>1)
count(transaction1,Badge)
count(t,Badge)
str(t)
nrow(transaction1)
nrow(t)
count(t,Badge)
count(t,Badge,Ste)
count(t,Badge,Ste) %>% sum(n)
count(t,Badge,Ste)
count(t,Badge)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
ID = substr(Badge,6,17)
)
t
count(t,ID)
count(t,Badge)
count(t,Badge,ID)
t1 <- t %>% count(ID, Badge) %>% rename(One = n)
t2 <- t %>% count(Badge) %>% rename(Tow = n)
t2
t2 <- t %>% count(ID) %>% rename(Tow = n)
t2
t3 <- left_join(t1,t2)
t3
t3 %>% filter(One != Tow)
str(t1)
str(t)
t1
t2
t2 <- t %>% count(ID) %>% rename(Two = n)
t2
t3 <- left_join(t1,t2)
t3
t3 %>% filter(One != Two)
str(t3)
t3 %>% filter(One != Two) %>% str
t
str(t)
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
ID = substr(Badge,6,17) %>% as.numeric
)
count(t,Badge)
count(t,ID)
count(t,ID,Ste)
t1 <- t %>% count(ID, Badge) %>% rename(One = n)
t2 <- t %>% count(ID) %>% rename(Two = n)
t11
t1
t2
t3 <- left_join(t1,t2)
t3 <- left_join(t1,t2) %>% filter(One != Two)
t3
str(t1)
t
t1
t1 %>% slice(1:10)
t1 %>% ungroup %>% slice(1:10)
t1 %>% ungroup %>% slice(1:10) %>% str
t1 <- t %>% count(ID, Badge) %>% rename(One = n) %>% ungroup
t2 <- t %>% count(ID) %>% rename(Two = n) %>% ungroup
t3 <- left_join(t1,t2) %>% filter(One != Two)
t3
t3Ã¹ID
t3%ID
t3$ID
str(t3)
t3$ID[1]
t3$ID[1] %>% print(digits = 17)
t3$ID[1] %>% print(digits = 17)t
t
t <- transaction1 %>%
mutate(
Ste= substr(Badge,1,5),
ID = substr(Badge,6,12) %>% as.numeric,
porteur = substr(Badge,13,17) %>% as.numeric
)
t
count(t,ID)
count(t,ID,porteur)
count(t,ID,porteur,Ste)
transaction1 %>% count(Ste)
t %>% count(Ste)
transaction
class(transaction1$Badge)
transaction <- read.table("BDD.after.csv", header = T, sep = ";")
transaction <- read.table("BDD.after.csv", header = T, sep = ";") %>% tbl_df
names(transaction) <- c("EVA","Ste", "Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
transaction
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
sum(is.na(transaction))
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
transaction1
transaction1 <- temp %>% select(EVA, Ste, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
# remove cde_soc_sor == A1 - A7, Z2
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Ste, Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
temp
transaction1 <- temp %>% select(-cde_entr)
transaction1
count(transaction1,Ste)
count(transaction1,Badge)
count(transaction1 %>%filter(Date >= as.Date("2015-1-1")) ,Badge)
transaction %>% count(Badge)
transaction %>% count(EVA)
transaction %>% count(EVA, Ste)
transaction %>% count(EVA, Ste, Badge)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% filter(n>1)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% count(n)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% filter(n>2)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% rename(nB = n) %>% count(nB)
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% rename(nB = n) %>% count(nB) %>% summarise(sum(n))
transaction %>% count(EVA, Ste, Badge) %>% count(EVA) %>% rename(nB = n) %>% count(nB) %>% summarise(sum(n * nB))
transaction1 %>% count(EVA, Ste, Badge) %>% count(EVA) %>% rename(nB = n) %>% count(nB) %>% summarise(sum(n * nB))
transaction1
transaction <- read.table("BDD.after.csv", header = T, sep = ";") %>% tbl_df
transaction
names(transaction) <- c("EVA","ID",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie",
"Ste","Badge","Porteur")
transaction
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Ste, Badge, Porteur,ID, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(-cde_entr)
transaction1
count(transaction, Ste)
count(transaction, Badge)
count(transaction, Badge, Porteur)
count(transaction, Badge, EVA)
count(transaction, Badge)
transaction1
count(transaction, ID)
t <- transaction1 %>% select(-ID)
count(t,Badge)
count(t,Badge,EVA)
count(t,Badge,EVA,Porteur)
t
write.table(t, "App.csv",sep=";",row.name=FALSE,quote=FALSE)
transaction1
library(dplyr)
library(knitr)
library(ggplot2)
library(gridExtra)
gares <- read.table("garesLngLat.csv", sep =",", header = TRUE) %>% tbl_df
gares
sum(is.na(gares))
temp <- sens %>% select(Entr, Sor) %>% distinct %>% tbl_df
t1 <- gares %>% transmute(Entr = Cde, Elng = Lng, Elat = Lat)
temp <- left_join(temp, t1)
t1 <- gares %>% transmute(Sor = Cde, Slng = Lng, Slat = Lat)
temp <- left_join(temp, t1)
temp
sum(is.na(temp))
trx
t.Active
t.Active
t.Active
t.Active %>% count(ID)
t.Active %>% filter(ActiveDay > 4)
t.Active %>% filter(ActiveDay > 4) %>% count(ID)
result
