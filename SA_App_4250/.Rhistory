t2 <- inner_join(transaction2,Grid)
count(Grid, Entr, Sor)
t1 <- transaction2 %>% filter(ID == 1)
t2 <- inner_join(t1,Grid)
t2 <- inner_join(transaction2,Grid)
t2
Grid
count(Grid,Entr,Sor)
count(Grid,Entr,Sor) %>% rename(no = n) %>% summarise(nmax = max(n),nmin = min(n))
count(Grid,Entr,Sor) %>% rename(no = n) %>% summarise(nmax = max(no),nmin = min(no))
count(Grid,Entr,Sor) %>% rename(no = n) %>% group_by(Entr,Sor) %>% summarise(nmax = max(no),nmin = min(no))
count(Grid,Entr,Sor) %>% rename(no = n) %>% group_by(Entr,Sor) %>% summarise(nmax = max(no))
count(Grid,Entr,Sor) %>% rename(no = n) %>% ggplot + geom_bar(aes(no))
t2 %>% filter(ID == 1)
count(t2, ID)
t.grid
ggplot(t.grid) + geom_tile(aes(l,d))
ggplot(t.grid) + geom_tile(aes(l,d, col = Row))
ggplot(t.grid) + geom_tile(aes(l,d, filll = Row))
ggplot(t.grid) + geom_tile(aes(l,d, fill = Row))
ggplot(t.grid) + geom_tile(aes(l,d, fill = Col))
ggplot(t.grid) + geom_tile(aes(l,d, fill = Col, col = Row))
ggplot(t2 %>% filter(as.numeric(ID) < 10)) + geom_tile(aes(Col, Row),alpha = 0.1) + facet_wrap(~ID)
t2
t3 <- t2 %>%
filter(TimeSor < 12 ) %>%
group_by(ID, Row, Col) %>%
summarise(noPsg = n(), T = mean(TimeSor), SD = sd(TimeSor), Tmin = T -SD, Tmax = T + SD)
t3
t2
JF
library(dplyr)
JF
library(knitr)
library(ggplot2)
library(gridExtra)
JF <- JF %>% tbl_df
JF
t <- transaction2 %>% filter(ID == 1)
t
ggplot(t) + geom_point(aes(Date, TimeSor))
t <- transaction2 %>% filter(ID == 20)
ggplot(t) + geom_point(aes(Date, TimeSor))
t <- transaction2 %>% filter(ID == 24)
ggplot(t) + geom_point(aes(Date, TimeSor))
?Date
t <- transaction2 %>% mutate(m= months(Date))
t
ggplot(t) + geom_bar(aes(m))
t <- transaction %>% mutate(m= months(Date))
transaction
JF
t <- transaction1 %>% mutate(m= months(Date))
ggplot(t) + geom_bar(aes(m))
t.lat <- data.frame(
d = seq(42  , 48.9,step),
u = seq(42.1, 49  ,step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lng <- data.frame(
l = seq(-2  , 7.9, step),
r = seq(-1.9, 8  , step)
) %>%
tbl_df %>%
mutate(Col = row_number())
step <- .2
step <- .2
t.lat <- data.frame(
d = seq(42  , 48.9,step),
u = seq(42.1, 49  ,step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lng <- data.frame(
l = seq(-2  , 7.9, step),
r = seq(-1.9, 8  , step)
) %>%
tbl_df %>%
mutate(Col = row_number())
t.lat$t <- 1
t.lng$t <- 1
t.grid <- inner_join(t.lat, t.lng) %>% tbl_df
t.grid
Grid <- inner_join(t.lat, t.lng) %>% tbl_df %>% select(Row, Col, u, d, l, r)
rm(t.lat,t.lng)
Grid
step <- .2
### add grid
t.lat <- data.frame(
d = seq(42  , 48.9,step),
u = seq(42.1, 49  ,step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lng <- data.frame(
l = seq(-2  , 7.9, step),
r = seq(-1.9, 8  , step)
) %>%
tbl_df %>%
mutate(Col = row_number())
t.lat$t <- 1
t.lng$t <- 1
Grid <- inner_join(t.lat, t.lng) %>% tbl_df %>% select(Row, Col, u, d, l, r)
t
t.lat
step
seq(42  , 48.9,step)
t.lat
t.lat <- data.frame(
d = seq(42  , 48.9,step),
u = seq(42.1, 49  ,step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lat
t.lat <- data.frame(
d = seq(42, 49 - step, step),
u = seq(42 + step, 49, step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lng <- data.frame(
l = seq(-2, 8 - step, step),
r = seq(-2 + step, 8, step)
) %>%
tbl_df %>%
mutate(Col = row_number())
t.lat$t <- 1
t.lng$t <- 1
Grid <- inner_join(t.lat, t.lng) %>% tbl_df %>% select(Row, Col, u, d, l, r)
Grid
step <- .5
### add grid
t.lat <- data.frame(
d = seq(42, 49 - step, step),
u = seq(42 + step, 49, step)
) %>%
tbl_df %>%
mutate(Row = row_number())
t.lng <- data.frame(
l = seq(-2, 8 - step, step),
r = seq(-2 + step, 8, step)
) %>%
tbl_df %>%
mutate(Col = row_number())
t.lat$t <- 1
t.lng$t <- 1
Grid <- inner_join(t.lat, t.lng) %>% tbl_df %>% select(Row, Col, u, d, l, r)
Grid
t <- sens %>% select(Entr, Sor) %>% distinct %>% tbl_df
t1 <- gares %>% transmute(Entr = Cde, Elng = Lng, Elat = Lat)
t <- left_join(temp, t1)
t1 <- gares %>% transmute(Sor = Cde, Slng = Lng, Slat = Lat)
t <- left_join(temp, t1)
### !!! parameter delta.Lat = delta.Lng = .1
delta.Lat = .1
delta.Lng = .1
t1 <- t %>%
filter(is.na(Elat) & !is.na(Slat)) %>%
mutate(u=Slat + delta.Lat ,
d=Slat - delta.Lat,
r=Slng + delta.Lng,
l=Slng - delta.Lng)
t2 <- t %>%
filter(!is.na(Elat) & is.na(Slat)) %>%
mutate(u=Elat + delta.Lat,
d=Elat - delta.Lat,
r=Elng + delta.Lng,
l=Elng - delta.Lng)
t3 <- t %>%
filter(!is.na(Elat) & !is.na(Slat)) %>%
mutate(
u = ( Elat + Slat + abs(Elat - Slat) )/2,
d = ( Elat + Slat - abs(Elat - Slat) )/2,
r = ( Elng + Slng + abs(Elng - Slng) )/2,
l = ( Elng + Slng - abs(Elng - Slng) )/2
)
temp <- rbind(t1,t2,t3) %>% rename(U=u, D=d, L=l, R=r)
temp <- temp %>%
mutate(t = 1) %>%
select(- c(Elng,Elat,Slng,Slat))
### Link Rectangle to small rectangle in t.grid
Grid <- data.frame(Entr = 0, Sor = 0, Row = 0, Col = 0) %>% tbl_df
Grid
for(i in 1:nrow(temp1)){
t1 <- temp %>% slice(i)
t2 <- inner_join(t.grid, t1) %>%
filter(u > D,
d < U,
r > L,
l < R) %>%
select(Entr,Sor,Row,Col)
Grid <- rbind(Grid,t2)
}
Grid <- Grid %>% tbl_df %>% slice(-1)
Grid
temp.Gare
Grid
transaction2
source('~/GitHub/SA_App_4250/Geographic_end2end.R')
ID.list
Ind.final
result.final
result.final %>% count(ID)
result.final %>% count(ID) %>% inner_join(t.segment) %>% count(Seg)
t.segment
t.Seg
ls
ls()
rm(g1,g2,g3,g4,g5,g6,g7)
rm(t.Chain, t.Chain.summary, t.E, t.FL, t.new, t.OD, t.G,t.S,t.noFL,t.noDP,t.Tag)
ls()
Resultl
Result
Ref
result.final
result.final %>% filter( (Tmax - Tmin) < 2)
result.final %>% filter( (Tmax - Tmin) < 2) %>% count(ID)
t.segment
Ref
trx
count(trx, ID)
result.final
time.taken.preparation
time.taken.model.0
time.taken  # 11.54938 mins
temp
result.Geo <- temp
count(result.Geo)
result.TS <- read.table(file = "result.final.TimeSpace.v20151029.csv", header = TRUE, sep = ";")
result.Geo <- read.table(file = "result.treated.Geographic.v20151105.csv", header = TRUE, sep = ";")
source('~/GitHub/SA_App_4250/SA_function.R', encoding = 'UTF-8')
t <- GetCharacters(transaction1)
t
### by TimeSpace Model
t1 <- result.TS %>% select(ID) %>% distinct(ID)
t1$ResultTS <- TRUE
t <- left_join(t,t1)
t$Result[is.na(t$ResultTS)] <- FALSE
### by Geographic Model
t1 <- result.Geo %>% select(ID) %>% distinct(ID)
t1$ResultGeo <- TRUE
t <- left_join(t,t1)
t$Result[is.na(t$ResultGeo)] <- FALSE
t
t1 <- result.TS %>% select(ID) %>% distinct(ID)
t1
t1$ResultGeo <- TRUE
t1
t <- left_join(t,t1)
class(t$ID)
class(t1$ID)
result.TS <- read.table(file = "result.final.TimeSpace.v20151029.csv", header = TRUE, sep = ";") %>% tbl_df %>% mutate(ID = as.character(ID))
result.Geo <- read.table(file = "result.treated.Geographic.v20151105.csv", header = TRUE, sep = ";") %>% tbl_df %>% mutate(ID = as.character(ID))
t1 <- result.TS %>% select(ID) %>% distinct(ID)
t1$ResultTS <- TRUE
t <- left_join(t,t1)
t$Result[is.na(t$ResultTS)] <- FALSE
### by Geographic Model
t1 <- result.Geo %>% select(ID) %>% distinct(ID)
t1$ResultGeo <- TRUE
t <- left_join(t,t1)
t$Result[is.na(t$ResultGeo)] <- FALSE
t
t <- GetCharacters(transaction1)
t1 <- result.TS %>% select(ID) %>% distinct(ID)
t1$ResultTS <- TRUE
t <- left_join(t,t1)
t$ResultTS[is.na(t$ResultTS)] <- FALSE
### by Geographic Model
t1 <- result.Geo %>% select(ID) %>% distinct(ID)
t1$ResultGeo <- TRUE
t <- left_join(t,t1)
t$ResultGeo[is.na(t$ResultGeo)] <- FALSE
t
count(t,ResultTS,ResultGeo)
t$Recent <- FALSE
t$Recent[t$Dmin > as.Date("2015-8-15")] <- TRUE
# get GoodTrx
t1 <- ID.OD4 %>% select(ID) %>% distinct(ID)
t1$GoodTrx <- TRUE
t <- left_join(t,t1)
t$GoodTrx[is.na(t$GoodTrx)] <- FALSE
t
t$Small <- FALSE
t$Small[t$Day < 5 | t$noPsg < 20 | t$Ddiff < 5] <- TRUE
# get Inactive
t$Inactive <- FALSE
t$Inactive[t$Dmax < as.Date("2015-7-1")] <- TRUE
t
Ref <- t %>%
count(Ref,ResultTS, ResultGeo, Recent, GoodTrx, Small, Inactive)
Ref <- t
count(Ref,ResultTS, ResultGeo, Recent, GoodTrx, Small, Inactive)
Ref$Seg <- "Impropable"
Ref$Seg[Ref$GoodTrx] <- "Propable"
Ref$Seg[Ref$Small == TRUE] <- "Small"
Ref$Seg[Ref$Recent == TRUE] <- "Recent"
Ref$Seg[Ref$Inactive == TRUE] <- "Inactive"
count(Ref, Seg)
t$Inactive <- FALSE
t$Inactive[t$Dmax < as.Date("2015-8-1")] <- TRUE
Ref <- t
Ref$Seg <- "Impropable"
Ref$Seg[Ref$GoodTrx] <- "Propable"
Ref$Seg[Ref$Small == TRUE] <- "Small"
Ref$Seg[Ref$Recent == TRUE] <- "Recent"
Ref$Seg[Ref$Inactive == TRUE] <- "Inactive"
count(Ref, Seg)
count(Ref, Seg,ResultTS)
count(Ref, Seg,ResultTS, ResultGeo)
save.image()
Grid
trx
t1 <- trx %>%
group_by(ID) %>%
summarise(ActiveDay = n_distinct(Date))
t2 <- trx %>%
group_by(ID, OD) %>%
summarise(Day = n_distinct(Date))
rm(t1.1)
t <- inner_join(t1,t2)
t
count(t,ID)
t <- t %>% mutate(Per = Day / ActiveDay)
t
t %>% filter(Per > .5)
t %>% filter(Per > .5) %>% count(ID)
t
Grid
t.grid
rm(t.lat,t.lng)
grid.display <- t.grid %>% mutate(OD = paste0(Row,"-",Col))
grid.display
rm(grid.display)
grid.display <- t.grid %>% mutate(OD = paste0(Row,"-",Col))
ggplot(grid.display) + geom_tile(aes(x = l, y = d))
grid.display
t
t.Active <- t %>% filter(Per > .5)
t.Active
t.Active <- t %>%
filter(Per > .5) %>%
inner_join(grid.display)
t.Active
ggplot(temp) + geom_tile(aes(d,l))
temp <- t.Active %>% filter(ID == 1)
ggplot(temp) + geom_tile(aes(d,l))
ggplot(temp) + geom_tile(aes(d,l)) + xlim(c(-2,8)) + ylim(c(42,49))
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49))
gares
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49)) +
geom_point(data= gares, aes(Lng, Lat, col = Societe))
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49)) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID)
temp <- t.Active %>% filter(as.numeric(ID) < 10)
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID)
ggplot(temp) + geom_tile(aes(l,d)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t.Acitve %>% count(Seg)
t.Active
t.Acitve %>% count(ID)
t.Acitve
t.Active %>% count(ID)
Ref
Ref
t.segment <- Ref %>% select(ID, ResultTS, ResultGeo, Seg)
t.Acitve
t.Active
t2 <- t.Active %>% count(ID) %>% right_join(t.segment)
t2
count(t2, Seg)
count(t2, Seg, ResultTS)
t2
t1
t1 <- t.Active %>%
group_by(ID,OD, u,l) %>%
summarise(n = n())
t1
t.Active
ggplot(temp) + geom_tile(aes(l,d, alpha = Day)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(temp) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
k = 1
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t2 %>% filter(ResultTS == TRUE,
ResultGeo == FALSE)
k = c(10,104)
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t2
t2 %>% filter(ResultTS == TRUE,
ResultGeo == FALSE,
!is.na(n))
t2 %>%
filter(ResultTS == TRUE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(as.numeric(ID))
k = c(2,6,10)
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t2 %>%
filter(ResultTS == FALSE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(as.numeric(ID))
k = c(19,33,43,58,61,73,79,89)
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t2 %>%
filter(ResultTS == FALSE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(desc(n) ,as.numeric(ID))
k = c(3078)
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
k = c(3967,3710,3465,2598)
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t
t2
ggplot(t2) + geom_bar(aes(n))
library(dplyr)
library(dplyr)
library(knitr)
library(ggplot2)
library(gridExtra)
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t.Active
t2
t2 %>%
filter(ResultTS == FALSE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(desc(n) ,as.numeric(ID))
t3 <- t2 %>%
filter(ResultTS == FALSE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(desc(n) ,as.numeric(ID))
t3
count(t3, Seg)
t3 %>% filter(Seg == "Propable")
k <- c(529,606,729,1078)
ggplot(t.Active %>% filter(ID %in% k)) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t.segment
t <- GetCharacters(transaction1)
### by TimeSpace Model
t1 <- result.TS %>% select(ID) %>% distinct(ID)
t1$ResultTS <- TRUE
t <- left_join(t,t1)
t$ResultTS[is.na(t$ResultTS)] <- FALSE
### by Geographic Model
t1 <- result.Geo %>% select(ID) %>% distinct(ID)
t1$ResultGeo <- TRUE
t <- left_join(t,t1)
t$ResultGeo[is.na(t$ResultGeo)] <- FALSE
# get Recent
t$Recent <- FALSE
t$Recent[t$Dmin > as.Date("2015-8-15")] <- TRUE
# get GoodTrx
t1 <- ID.OD4 %>% select(ID) %>% distinct(ID)
t1$GoodTrx <- TRUE
t <- left_join(t,t1)
t$GoodTrx[is.na(t$GoodTrx)] <- FALSE
# get Small
t$Small <- FALSE
t$Small[t$Day < 5 | t$noPsg < 20 | t$Ddiff < 5] <- TRUE
# get Inactive
t$Inactive <- FALSE
t$Inactive[t$Dmax < as.Date("2015-8-1")] <- TRUE
Ref <- t
count(Ref,ResultTS, ResultGeo, Recent, GoodTrx, Small, Inactive)
# construct Seg
Ref$Seg <- "Improbable"
Ref$Seg[Ref$GoodTrx] <- "Probable"
Ref$Seg[Ref$Small == TRUE] <- "Small"
Ref$Seg[Ref$Recent == TRUE] <- "Recent"
Ref$Seg[Ref$Inactive == TRUE] <- "Inactive"
t.segment <- Ref %>% select(ID, ResultTS, ResultGeo, Seg)
t.segment
count(t.segment, Seg)
t1 <- trx %>%
group_by(ID) %>%
summarise(ActiveDay = n_distinct(Date))
t2 <- trx %>%
group_by(ID, OD) %>%
summarise(Day = n_distinct(Date))
t <- inner_join(t1,t2) %>% mutate(Per = Day / ActiveDay)
t.Active <- t %>%
filter(Per > .5) %>%
inner_join(grid.display)
temp <- t.Active %>% filter(as.numeric(ID) < 10)
ggplot(temp) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t2 <- t.Active %>% count(ID) %>% right_join(t.segment)
t3 <- t2 %>%
filter(ResultTS == FALSE,
ResultGeo == FALSE,
!is.na(n)) %>%
arrange(desc(n) ,as.numeric(ID))
count(t3,Seg)
