ggplot(ID.segment) + geom_bar(aes(n), binwidth = 1) + facet_wrap(~One_Zone)
ggplot(ID.segment) + geom_bar(aes(n), binwidth = 10) + facet_wrap(~One_Zone)
ID.segment
count(t.Active,ActiveDay)
ggplot(t.Active) + geom_bar(aes(ActiveDay), binwidth = 1)
t2
t3
t.Active
t.Active %>% count(ID)
t.Active %>% filter(ActiveDay > 5 ) %>% count(ID)
t.Active
t.Active %>% count(ID)
t.Active %>% count(ID, ActiveDay)
t2 <- t.Active %>% count(ID, ActiveDay) %>% right_join(t.segment)
ID.segment <- temp %>%
select(ID, One_Zone) %>%
right_join(t2)
ID.segment
ggplot(ID.segment) + geom_bar(aes(ActiveDay),binwidth = 1)
ggplot(ID.segment) + geom_bar(aes(ActiveDay),binwidth = 1) + facet_wrap(~Seg)
ggplot(ID.segment) + geom_bar(aes(ActiveDay, fill = as.factor(One_Zone)),binwidth = 1) + facet_wrap(~Seg)
t <- ID.segment %>% filter(One_Zone == TRUE) %>% select(ID)
t1 <- inner_join(t,t.Active)
count(t1, ID)
t1
trx
t.Active
t1 <- inner_join(t,t.Active) %>% select(ID,OD)
t1
t2 <- inner_join(t,trx)
count(t2, ID)
t2
t2
t1
t.Active
t1 <- inner_join(t,t.Active) %>% select(ID,OD,Per)
t1
t1 <- inner_join(t,t.Active) %>% select(ID,OD,Per) %>% mutate(Per = round(Per,1))
t1
t3 <- left_join(t2,t1)
t3
count(t3,Per)
t1 <- t3 %>%
filter(!is.na(Per)) %>%
select(-c(Row: OD))
t1
count(t1, Per)
count(t1, ID, Per)
count(t1,ID)
t2 <- t1 %>% select(-Per) %>% distinct
t2
class(t1)
t2 <- t1 %>% select(-Per) %>% ungroup %>% distinct
count(t2,ID)
ID.segment
ID.segment %>% count(ResultGeo)
ID.segment %>% count(is.na(n))
ID.segment %>% count(is.na(n), One_Zone)
t1
t2
library(dplyr)
library(knitr)
library(ggplot2)
library(gridExtra)
t1
t2
library
library(dplyr)
library(knitr)
library(ggplot2)
library(gridExtra)
ggplot(t) + geom_tile(aes(DOW,H, fill = as.factor(Per_floor))) + facet_wrap(~ID)
t
trx.time
ID.segment
t.Active
source('~/GitHub/SA_App_4250/App_4250_Segmentation_general.R')
ID.segment
trx.grid
trx
t
t1
t <- ID.segment %>% filter(One_Zone == TRUE) %>% select(ID)
t
t.Active
count(t.Active,ID)
summary(t.Active)
t.Active
t1 <- inner_join(t,t.Active) %>% select(ID,OD,Per) %>% mutate(PerR = round(Per,1))
t1
count(t1,ID)
t
t.Active
t.Active
t1
t1
trx
transaction2
trx
t1
trx
t1 <- inner_join(t,t.Active) %>% select(ID,OD)
t1 <- inner_join(t,t.Active) %>% select(ID,OD) %>% distinct
t1
t1 <- inner_join(t,t.Active) %>% select(ID,OD) %>% ungroup %>% distinct
t1
t2 <- inner_join(t1,trx)
t2
count(trx, ID)
count(t2, ID)
temp
GetCharacters(trx)
count(trx,ID)
temp <- GetCharacters(trx)
count(t2,ID)
t4 <- count(t2, ID) %>% rename(nTrx_in_Zone = n)
t4
temp <- left_join(temp, t4)
temp
temp <- left_join(temp, t4) %>%
mutate(Per_in_Zone = nTrx_in_Zone / noPsg)
temp
ggplot(temp) + geom_density(aes(Per_in_Zone))
t2
trx
temp1 <- trx %>% select(-c(Row:OD))
temp1
temp1 <- trx %>% select(-c(Row:OD)) %>% distinct
t2
temp2 <- t2 %>% select(-c(Row:OD)) %>% distinct
temp2
temp1 <- trx %>% select(-c(Row:OD)) %>% ungroup %>% distinct
temp2 <- t2 %>% select(-c(Row:OD)) %>% ungroup %>% distinct
t2
temp2 <- t2 %>% select(-c(OD,Row,Col)) %>% ungroup %>% distinct
temp <- GetCharacters(temp1)
t4 <- count(temp2, ID) %>% rename(nTrx_in_Zone = n)
temp <- left_join(temp, t4) %>%
mutate(Per_in_Zone = nTrx_in_Zone / noPsg)
temp
ggplot(temp) + geom_density(aes(Per_in_Zone))
temp2
JF
temp2
temp.time <- temp2 %>%
mutate(H = round(TimeSor, digits = 0),
H_2 = H - H %% 2
)
temp.time
t <- temp.time %>% filter(as.numeric(ID) < 9)
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
t2 <- t %>% group_by(ID,DOW,H_2) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
ggplot(t2 %>% filter(freq > 15)) + geom_tile(aes(DOW,H_2, fill = freq))
temp.time
temp.time %>% count(ID)
temp.time %>% count(ID) %>% ggplot+geom_density(aes(n))
temp.time %>% count(ID) %>% filter(n<100) %>% ggplot+geom_bar(aes(n),binwidth = 10)
t <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80)
t
t <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
slice(1:9)
t
t <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
slice(1:9)
t <- temp.time %>% inner_join(t)
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
t2 <- t %>% group_by(ID,DOW,H_2) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
t3 <-  t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
ggplot(t) + geom_tile(aes(Date,H)) + facet_wrap(~ID)
t3
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
temp <- t.Active %>% filter(as.numeric(ID) < 10)
ggplot(temp) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t3 <- t.Active %>% inner_join(t)
ggplot(t3) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t3) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,46)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(t3) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,44)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ID.segment
t4 <- ID.segment %>% inner_join(t)
t4
t
t5 <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
slice(1:9)
t <- temp.time %>% inner_join(t5)
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
t2 <- t %>% group_by(ID,DOW,H_2) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
t3 <- t.Active %>% inner_join(t5)
ggplot(t3) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,49)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
ggplot(t3) + geom_tile(aes(l,d, alpha = Per)) + xlim(c(-2,8)) + ylim(c(42,44)) + facet_wrap(~ID) +
geom_point(data= gares, aes(Lng, Lat, col = as.factor(Societe)))
t4 <- ID.segment %>% inner_join(t5)
t4
temp.time
temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
left_join(ID.segment) %>%
filter(ResultTS == FALSE)
t5 <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
left_join(ID.segment) %>%
filter(ResultTS == FALSE)
t5 <-  temp.time %>% count(ID) %>% filter(n<100 & n > 80) %>%
select(ID) %>%
left_join(ID.segment) %>%
filter(ResultTS == FALSE & ResultGeo == TRUE)
t5
t <- temp.time %>% inner_join(t5)
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
t2 <- t %>% group_by(ID,DOW,H_2) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
ggplot(t2) + geom_tile(aes(DOW,H_2, fill = freq)) + facet_wrap(~ID)
t5 <-  temp.time %>% count(ID) %>% filter( n > 80) %>%
select(ID) %>%
left_join(ID.segment) %>%
filter(ResultTS == FALSE & ResultGeo == TRUE) %>%
slice(1:9)
t5
t <- temp.time %>% inner_join(t5)
t1 <- t %>% group_by(ID,DOW,H) %>% summarise(freq = n())
t2 <- t %>% group_by(ID,DOW,H_2) %>% summarise(freq = n())
ggplot(t1) + geom_tile(aes(DOW,H, fill = freq)) + facet_wrap(~ID)
source('~/GitHub/SA_App_4250/App_4250_data_preparation.R')
ID.Entr3
transaction
str(transaction)
period
source('~/GitHub/SA_App_4250/SA_function.R', encoding = 'UTF-8')
source('~/GitHub/SA_App_4250/App_4250_script.r')
source('~/GitHub/SA_App_4250/App_4250_script.r')
print(test.end)
source('~/GitHub/SA_App_4250/App_4250_script.r')
source('~/GitHub/SA_App_4250/App_4250_script.r')
source('~/GitHub/SA_App_4250/App_4250_script.r')
transaction <- read.table("BDD.csv", header = T, sep = ";") %>% tbl_df
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
transaction
transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor))
temp <- transaction %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor)) %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor))
transaction
transaction %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
class(transaction$cde_soc_entr)
class(transaction$cde_soc_sor)
class(transaction$heure_entr)
temp <- transaction %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor)) %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.numeric(as.character(heure_entr)),
heure_sor = as.numeric(as.character(heure_sor)))
temp
transaction
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp <- transaction %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor)) %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor))
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
transaction1 <- transaction1 %>%
filter(Date >= as.Date("2015-1-1"))%>%
mutate(Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
source('~/GitHub/SA_App_4250/App_4250_script.r')
temp
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
# some gares are with cde_soc_entr as character, just removed
temp <- transaction %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor)) %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor))
temp
temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor )
transaction1
transaction1$Badge[1]
transaction1$Badge[1] %>% print(n=16)
transaction1$Badge[1] %>% print(digits=16)
transaction <- read.table("BDD.csv", header = T, sep = ";")
transaction <- tbl_df(transaction)
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
# str(transaction)
# some gares are with cde_soc_entr as character, just removed
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
# remove cde_soc_sor == A1 - A7, Z2
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
transaction1
write.table(transaction1,"Input_v20151126.csv",sep=",",row.name=FALSE,quote=FALSE)
summary(transaction1)
InputFileName = "Input_v20151126.csv"
InputFileName
transaction <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
summary(transaction)
write.table(transaction1,"Input_v20151126.csv",sep=";",row.name=FALSE,quote=FALSE)
transaction <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
summary(transaction)
str(transaction)
t <- transaction %>%
mutate(Date = as.Date(as.character(Date)))
t1 <- t %>% filter(Date >= train.start & Date <= test.end)
t1
library(zoo)
install.packages("zoo")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
t
transaction
transaction
library(dplyr)
library(cluster)
class(transaction)
transaction
t <- transaction %>%
mutate(
ID = as.character(Badge),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
t
str(trx)
transaction <- read.table("BDD.csv", header = T, sep = ";")
transaction <- tbl_df(transaction)
names(transaction) <- c("EVA","Badge",
"cde_soc_entr","cde_entr", "heure_entr",
"cde_soc_sor","cde_sor", "heure_sor",
"Voie")
temp <- transaction %>%
mutate(
cde_soc_entr = as.numeric(as.character(cde_soc_entr)),
cde_soc_sor = as.numeric(as.character(cde_soc_sor)),
heure_entr = as.character(heure_entr),
heure_sor = as.character(heure_sor)) %>%
filter(!is.na(cde_soc_entr) & !is.na(cde_soc_sor))
temp <- temp %>%
mutate(
Entr = 25000000 + cde_soc_entr * 1000 + cde_entr,
Sor = 25000000 + cde_soc_sor * 1000 + cde_sor ,
Y = substr(heure_sor, 7, 10), M = substr(heure_sor, 4, 5), D = substr(heure_sor, 1, 2),
Date = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(Date)$wday,
WOY = as.numeric(format(Date+3, "%U")),
HH = as.numeric(substr(heure_entr, 12, 13)), MM = as.numeric(substr(heure_entr, 15, 16)) ,
TimeEntr = HH + MM / 60,
HH = as.numeric(substr(heure_sor, 12, 13)), MM = as.numeric(substr(heure_sor, 15, 16)) ,
TimeSor = HH + MM / 60
) %>%
select(EVA,Badge, cde_entr, Entr, Sor, Voie, Date, DOW, WOY, TimeEntr, TimeSor)
temp$Entr[temp$cde_entr==0] <- 0
temp$TimeEntr[temp$cde_entr==0] <- 0
transaction1 <- temp %>% select(EVA, Badge, Entr, Sor, Date, DOW, WOY, TimeEntr, TimeSor, Voie)
rm(temp)
transaction1 <- transaction1 %>% filter(Date >= as.Date("2015-1-1"))
transaction1 <- transaction1 %>% mutate(Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
transaction1
ID <- transaction1 %>%
group_by(Badge) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n()) %>%
arrange(desc(noPsg)) %>%
mutate(ID = as.character(row_number()))
temp <- ID %>% select(ID, Badge)
transaction1 <- inner_join(temp,transaction1)
rm(temp)
ID
transaction1
transaction2 <- transaction1 %>% filter(Date >= train.start)
transaction2
transaction2 %>% count(ID)
transaction1 %>% count(ID)
ID2 <- transaction2 %>%
group_by(ID) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n()) %>%
arrange(desc(noPsg))
ID2 <- left_join(ID2,period %>% select(-Day))
ID2
ID2$Small <- FALSE
ID2$Small[ID2$noPsg < 10 | ID2$Day < 5 | ID2$Ddiff < 5] <- TRUE
### add Inactive =
#   F: always active
#   T: no trx after 2015/8/1
ID2$Inactive <- FALSE
ID2$Inactive[ID2$Dmax < as.Date("2015/8/1")] <- TRUE
ID2
ID3 <- ID2 %>%
filter(Small == FALSE, Inactive == FALSE) %>%
select(-c(Small, Inactive))
ID3
t <- ID3 %>% select(ID)
transaction3 <- inner_join(transaction2, t)
transaction3 %>% count(ID)
period
