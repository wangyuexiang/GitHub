ind.model.1$ModelDecade <- 1
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
test.model.2$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
ind.model.2$ModelDecade <- 2
result.model.decade.0
result.model.decade.1
result.model.decade.2
source('~/GitHub/SA_1_click/SA_function.R', encoding = 'UTF-8')
source('~/GitHub/SA_1_click/SA_end2end.R')
result.model.decade.2
result.model.decade.1
result.model.decade.0
test.model.0 <- GetResult(test, result.model.decade.0)
test.model.0$ModelDecade <- 0
test.model.0
test.model.2 <- GetResult(test, result.model.decade.2)
class(t$ID)
class(test$ID)
class(result.model.decade.0$ID)
class(result.model.decade.0$OD)
class(test$OD)
class(result.model.decade.0$DOW)
class(test$DOW)
test.model.2 <- GetResult(test, result.model.decade.2)
test.model.2$ModelDecade <- 2
test.model.2
result.model.decade.2
test
source('~/GitHub/SA_1_click/SA_end2end.R')
source('~/GitHub/SA_1_click/SA_end2end.R')
source('~/GitHub/SA_1_click/SA_end2end.R')
source('~/GitHub/SA_1_click/SA_end2end.R')
source('~/GitHub/SA_1_click/SA_function.R', encoding = 'UTF-8')
source('~/GitHub/SA_1_click/SA_end2end.R')
source('~/GitHub/SA_1_click/SA_end2end.R')
result
result.final
trx
BDD
result
source('~/GitHub/SA_1_click/SA_function.R', encoding = 'UTF-8')
source('~/GitHub/SA_1_click/SA_end2end.R')
result
result.finql
result.final
result.final %>% count(ID)
ref %>% filter(N == 4)
temp_FF
temp_FF %>% filter(Date > train.start) %>% ggplot + geom_point(aes(Date,TimeSor))
temp_FF %>% filter(Date > train.start) %>% count(Entr,Sor)
temp_FF %>% filter(Date > train.start) %>% count(Entr,Sor) %>% arrange(desc(n))
temp_FF %>% filter(Date > train.start) %>% count(Entr,Sor) %>% ungroup %>% arrange(desc(n))
temp_PB %>% filter(Date > train.start) %>% count(Entr,Sor) %>% ungroup %>% arrange(desc(n))
temp_PB
BDD %>% filter(N == 4) %>% filter(Date > train.start) %>% count(Entr,Sor) %>% ungroup %>% arrange(desc(n))
BDD %>% filter(N == 44) %>% filter(Date > train.start) %>% count(Entr,Sor) %>% ungroup %>% arrange(desc(n))
source('~/GitHub/SA_1_click/SA_end2end.R')
d
test.model.0 <- GetResult(test, result.model.decade.0)
test
source('~/GitHub/SA_1_click/SA_end2end.R')
test
source('~/GitHub/SA_1_click/SA_end2end.R')
test
result.model.decade.0
result.model.decade.1
result.model.decade.2
source('~/GitHub/SA_1_click/SA_end2end.R')
result.final
temp
temp %>% filter(N == 4)
temp %>% filter(N == 44)
save.image()
temp %>% filter(N == 44)
temp %>% filter(N == 4)
temp
temp
temp <- temp %>% arrange(N, desc(noPsg))
temp
count(temp,Nom)
count(temp,N)
BDD %>% filter(N == 1)
BDD %>% filter(N == 4)
temp %>% filter(N == 4)
source('~/GitHub/SA_1_click/SA_function.R', encoding = 'UTF-8')
rm(r,temp,temp1,temp2,test,train,test.final)
rm(period,train.period,test.period)
rm(param.days)
rm(train.final,train.result,transaction,trx)
rm(trx.after,trx.after.ref,trx.ready,trx.ref, VIP2, VIP3)
rm(end.time,end.time.model.0,end.time.preparation,end)
rm(g1,g2,g3,g4,g5)
rm(param.ind3,param.max.nb.cluster,param.min.nb.for.cluster,param.min.noPsg)
rm(param.min.uniqueTimeSor,param.model.2,param.percentage,param.SDWprnoW,param.var,param.varweekdays)
rm(i,start.time,test.end,test.start,time.taken,time.taken.model.0,time.taken.preparation,titile,train.start)
rm(i,start.time,test.end,test.start,time.taken,time.taken.model.0,time.taken.preparation,title,train.start)
rm(chose.model,GetInd,GetLngLat,getModel.units,getNbClusterMax,getNbClusterMax.aux,GetNumberDays,GetResult,inverse.after.SO)
rm(Model,Model.for.a.decade,Sens,SO,SO.aux,)
rm(Ind,Ind.final,input,models.units,temp.gares,temp.OD,test.result)
save.image()
rm(Model,Model.for.a.decade,Sens,SO,SO.aux)
result <- read.table("result.TLPC.csv", sep = ";", header = TRUE) %>% tbl_df
library(dplyr)
library(ggplot2)
library(gridExtra)
result <- read.table("result.TLPC.csv", sep = ";", header = TRUE) %>% tbl_df
MODELE
garesorder
rm(JF,gares,sens,MODELE)
result
t
t.TLPC %>% filter(ind == 999)
t.TLPC <- t %>% filter(ind == 999)
t.TLPC
t.TLPC %>% count(Entr, Sor)
count(t.TLPC, ID)
count(t.TLPC, ID) %>% ggplot + geom_bar(aes(n),binwidth = 1)
result
result %>% count(OD) %>% arrange(desc(n))
count(t.TPLC, Entr, Sor)
t.TLPC
count(t.TLPC, Entr, Sor)
result %>% count(OD) %>% arrange(desc(n))
t.TLPC
t2 <- result %>% select(OD)
t2
read.table(t2, sep = ":")
read.table(t2$OD, sep = ":")
class(t2)
class(t2$OD)
class(as.character(t2$OD))
read.table(as.character(t2$OD), sep = ":")
read.table(as.character(t2$OD), sep = ":")
?read.tale
?read.table
as.character(t2$OD)
t2 <- result %>% select(OD) %>% as.chracter
t2 <- result %>% select(OD) %>% as.character
t2
result$OD
result$OD %>% as.character
t2 <- result %>% select(as.character(OD))
t2 <- result %>% transmute(OD =as.character(OD))
t2
read.table(t2$OD,sep="-")
read.table(t2$OD,sep="-")
read.table(text = t2$OD,sep="-")
t2 <- result %>% transmute(OD =as.character(OD))
t2 <- read.table(text = t2$OD,sep="-") %>% tbl_df
t2
t2 <- result %>% transmute(OD =as.character(OD))
t2 <- read.table(text = t2$OD,sep="-") %>% tbl_df %>%
transmute(Entr = V1, Sor = V2)
t2
result <- cbind(result,t2)
result
result
result <- read.table("result.TLPC.csv", sep = ";", header = TRUE) %>% tbl_df
t2 <- result %>% transmute(OD =as.character(OD))
t2 <- read.table(text = t2$OD,sep="-") %>% tbl_df %>%
transmute(Entr = V1, Sor = V2)
result <- cbind(result,t2) %>% tbl_df
result
t.TLPC
t.TLPC %>% count(Entr,Sor)
t.TLPC
result
t1 <- t.TLPC %>% select(ID, Entr, Sor, DateSor, DOW, TimeSor)
t1
result
t2 <- result %>% select(ID, Entr, Sor, DOW, Tmin, Tmax, noPsg)
t2
t3 <-t1 %>% left_join(t2)
t3
count(t.TLPC ,Entr,Sor)
t3 <-t1 %>% left_join(t2, by = c(ID,Sor, DOW))
t3 <-t1 %>% left_join(t2, by = c("ID","Sor", "DOW")
)
t3
t1 <- t.TLPC %>% transmute(ID, Default = Entr, Sor, DateSor, DOW, TimeSor)
t2 <- result %>% select(ID, Entr, Sor, DOW, Tmin, Tmax, noPsg)
t3 <-t1 %>% left_join(t2, by = c("ID","Sor", "DOW"))
t3
count(t3, ID,Default,Sor, DOW)
count(t3, ID,Default,Sor, DOW) %>% count(n>1)
count(t1, ID,Entr,Sor, DOW) %>% count(n>1)
count(t1, ID,Default,Sor, DOW) %>% count(n>1)
t3
t3 %>% count(Tmin <= TimeSor, Tmax >= TimeSor)
TLPC
t
t.TLPC
t.TLPC %>% count(DateSor,Sor)
t.TLPC %>% count(ID, DateSor,Sor)
t.TLPC %>% count(ID, DateSor,Sor) %>% count(n>1)
t4 <- t.TLPC %>% count(ID, DateSor,Sor) %>% filter(n>1)
t4
t5 <- t.TLPC %>% inner_join(t4)
t5
nrow(TLPC)
nrow(TLPC %>% distinct)
TLPC
TLPC %>% arrange(1:10)
TLPC %>% arrange(SOEMC:HEUEN)
TLPC %>% arrange(SOEMC)
TLPC %>% arrange(CLIPER, DPASS, DGAPE)
TLPC %>% arrange(CLIPER, DPASS, NGAPE)
TLPC %>% arrange(CLIPER, DPASS, NGAPE) %>% distinct
TLPC %>% arrange(CLIPER, DPASS, NGAPE) %>% count(CLIPER, DPASS,NGAPE,HPASS)
TLPC %>% arrange(CLIPER, DPASS, NGAPE) %>% count(CLIPER, DPASS,NGAPE,HPASS) %>% filter(n>2)
TLPC %>% duplicate
?duplicateed
?duplicated
duplicated(TLPC)
TLPC[duplicated(TLPC),]
TLPC[duplicated(TLPC),] %>% arrange(CLIPER, DPASS, HPSS)
TLPC[duplicated(TLPC),] %>% arrange(CLIPER, DPASS, HPASS)
TLPC
TLPC[duplicated(TLPC),] %>% arrange(CLIPER, DPASS, HPASS)
t
t %>% distinct
str(t)
t
t %>% duplicated
t[t$duplicated,]
t[t$duplicated]
t[duplicated(t),]
gares
gares <- read.table("Ref_gares.csv",sep=";",header=TRUE) %>% tbl_df
gares
gares <- read.table("Ref_gares.csv",sep=",",header=TRUE) %>% tbl_df
gares
gares %>% filter(Cde %in% c(25006002,25006009,25006036,25006037,25006038))
gares %>% filter(Cde %in% c(25006002,25006009,25006036,25006037,25006038)) %>% ggplot + geom_point(aes(Lng,Lat))
gares %>% filter(Cde %in% c(25006002,25006009,25006036,25006037,25006038)) %>% ggplot + geom_point(aes(Lng,Lat, col = as.factor(Cde)))
t[duplicated(t),]
t
t %>% count(ID, Entr,Sor, DateSor, TimeSor)
t %>% count(ID, Entr,Sor, DateSor, TimeEntr, TimeSor)
t4 <- t %>% count(ID, Entr, Sor, DateSor, TimeSor) %>% filter(n>1)
t5 <- t %>% inner_join(t4)
t2
tt5
t5
TLPC <- read.table("BDD_TLPC.csv", sep = ";", header = TRUE) %>% tbl_df %>% distinct
TLPC %>% arrange(CLIPER, DPASS, NGAPE) %>% count(CLIPER, DPASS,NGAPE,HPASS) %>% filter(n>2)
t <- TLPC
names(t) <- c("Ste", "Badge", "Porteur",
"Sor",  "Voie",
"DateSor", "hSor",
"Entr", "ind",
"DateEntr","hEntr")
t <- t %>%
mutate(
ID = Badge * 1e5 + Porteur,
Y = substr(DateSor, 1, 4), M = substr(DateSor, 5, 6), D = substr(DateSor, 7, 8),
DateSor = as.Date(paste0(Y, "-", M, "-", D)),
Y = substr(DateEntr, 1, 4), M = substr(DateEntr, 5, 6), D = substr(DateEntr, 7, 8),
DateEntr = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(DateSor)$wday,
WOY = as.numeric(format(DateSor+3, "%U")),
HH = hEntr %/% 10000, MM = ((hEntr %% 10000) %/% 100),
TimeEntr = HH + MM / 60,
HH = hSor %/% 10000, MM = ((hSor %% 10000) %/% 100),
TimeSor = HH + MM / 60
) %>%
select(Ste, ID, Badge, Porteur, Entr, Sor, Voie, DateEntr, DateSor, DOW, WOY, TimeEntr, TimeSor, ind)
t1 <- t %>% rename(EVA = ID, Date = DateSor) %>%
select(-c(DateEntr, ind))
write.table(t1, "TLPC.csv",sep=";",row.name=FALSE,quote=FALSE)
t1
result <- read.table("result.TLPC.v20151203.csv", sep = ";", header = TRUE) %>% tbl_df
t2 <- result %>% transmute(OD =as.character(OD))
t2 <- read.table(text = t2$OD,sep="-") %>% tbl_df %>%
transmute(Entr = V1, Sor = V2)
result <- cbind(result,t2) %>% tbl_df
result
t.TLPC <- t %>% filter(ind == 999)
t.TLPC %>% count(Entr, Sor)
t1 <- t.TLPC %>% transmute(ID, Default = Entr, Sor, DateSor, DOW, TimeSor)
t2 <- result %>% select(ID, Entr, Sor, DOW, Tmin, Tmax, noPsg)
t3 <-t1 %>% left_join(t2, by = c("ID","Sor", "DOW"))
t3 %>% count(Tmin <= TimeSor, Tmax >= TimeSor)
t3
t1
t3
t1
t2
t3
t3t1
t1
t3 %>% count(ID, Default, Sor, DateSor, TimeSor)
t3 %>% count(ID, Default, Sor, DateSor, TimeSor) %>% filter(n>2)
t3
t3 %>% count(ID, Default, Sor, DateSor, TimeSor)
t3 %>% count(ID, Default, Sor, DateSor, TimeSor) %>% filter(n>1)
t4 <- t3 %>% count(ID, Default, Sor, DateSor, TimeSor) %>% filter(n>1)
t5 <- t3 %>% inner_join(t4)
t5
t3
count(t,Entr,Sor)
count(t1,Entr,Sor)
count(t.TLPC,Entr,Sor)
gc()
gc()
t3
t3
t1 <- t.TLPC %>% transmute(ID, Entr, Sor, DateSor, DOW, TimeSor)
t2 <- result %>% transmute(ID, RegularEntr= Entr, Sor, DOW, Tmin, Tmax, noPsg)
t3 <-t1 %>% left_join(t2, by = c("ID","Sor", "DOW"))
t3
t3 <- t3 %>% mutate(TLPC = (TimeSor <= Tmax) &
(TimeSor >= Tmin) )
t3
count(t3,TLPC)
t3
t3 %>% select(ID:TimeSor)
t3 %>% select(ID:TimeSor) %>% distinct
TLPC <- read.table("BDD_TLPC.csv", sep = ";", header = TRUE) %>% tbl_df %>% distinct
TLPC
TLPC <- read.table("BDD_TLPC.csv", sep = ";", header = TRUE) %>% tbl_df
count(TLPC)
count(TLPC,CLIPER,PORTEU)
t <- TLPC
names(t) <- c("Ste", "Badge", "Porteur",
"Sor",  "Voie",
"DateSor", "hSor",
"Entr", "ind",
"DateEntr","hEntr")
t <- t %>%
mutate(
ID = Badge * 1e5 + Porteur,
Y = substr(DateSor, 1, 4), M = substr(DateSor, 5, 6), D = substr(DateSor, 7, 8),
DateSor = as.Date(paste0(Y, "-", M, "-", D)),
Y = substr(DateEntr, 1, 4), M = substr(DateEntr, 5, 6), D = substr(DateEntr, 7, 8),
DateEntr = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(DateSor)$wday,
WOY = as.numeric(format(DateSor+3, "%U")),
HH = hEntr %/% 10000, MM = ((hEntr %% 10000) %/% 100),
TimeEntr = HH + MM / 60,
HH = hSor %/% 10000, MM = ((hSor %% 10000) %/% 100),
TimeSor = HH + MM / 60
) %>%
select(Ste, ID, Badge, Porteur, Entr, Sor, Voie, DateEntr, DateSor, DOW, WOY, TimeEntr, TimeSor, ind)
count(TLPC,CLIPER,PORTEU)
count(t,ID)
t %>% distinct %>% count(ID)
t[duplicated(t),] %>% count(ID)
t1 <- t %>% distinct %>% count(ID) %>% rename(n = duplicated)
t1 <- t %>% distinct %>% count(ID) %>% rename(n_duplicated = n)
t1
left_join(t1,t)
left_join(t1,t %>% count(ID))
t1
t[duplicated(t),] %>% count(ID)
t1 <- t[duplicated(t),] %>% count(ID)
t1
t1 <- t[duplicated(t),] %>% count(ID) %>% rename(n_d = n)
t1
left_join(t1,t %>% count(ID))
t
t %>% filter(ID ==3058010004)
t1
sum(duplicated(t))
nrow(t) - nrow(t %>% distinct)
nrow(t %>% distinct)
TLPC <- read.table("BDD_TLPC.csv", sep = ";", header = TRUE) %>% tbl_df %>% distinct
# might be many duplicate
TLPC %>% arrange(CLIPER, DPASS, NGAPE) %>% count(CLIPER, DPASS,NGAPE,HPASS) %>% filter(n>2)
t <- TLPC
names(t) <- c("Ste", "Badge", "Porteur",
"Sor",  "Voie",
"DateSor", "hSor",
"Entr", "ind",
"DateEntr","hEntr")
t <- t %>%
mutate(
ID = Badge * 1e5 + Porteur,
Y = substr(DateSor, 1, 4), M = substr(DateSor, 5, 6), D = substr(DateSor, 7, 8),
DateSor = as.Date(paste0(Y, "-", M, "-", D)),
Y = substr(DateEntr, 1, 4), M = substr(DateEntr, 5, 6), D = substr(DateEntr, 7, 8),
DateEntr = as.Date(paste0(Y, "-", M, "-", D)),
DOW = as.POSIXlt(DateSor)$wday,
WOY = as.numeric(format(DateSor+3, "%U")),
HH = hEntr %/% 10000, MM = ((hEntr %% 10000) %/% 100),
TimeEntr = HH + MM / 60,
HH = hSor %/% 10000, MM = ((hSor %% 10000) %/% 100),
TimeSor = HH + MM / 60
) %>%
select(Ste, ID, Badge, Porteur, Entr, Sor, Voie, DateEntr, DateSor, DOW, WOY, TimeEntr, TimeSor, ind)
count(t, ind)
count(t,ID, ind)
t.TLPC <- t %>% filter(ind == 999)
t.TLPC %>% count(Entr, Sor)
t.TLPC
t.TLPC %>% count(ID)
t.TLPC %>% count(ID) %>% rename(nTLPC = n ) %>% count(n)
t.TLPC %>% count(ID) %>% rename(nTLPC = n ) %>% count(nTLPC)
t %>% count(Entr == Sor)
t
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = DateSor > DateEntr & TimeSor > TimeSor)
t
count(t,C1)
count(t,C2)
count(t,C3)
count(t,C1,C2,C3)
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = DateSor > DateEntr)
count(t,C1,C2,C3)
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = !is.na(DateEntr) & DateSor > DateEntr)
count(t,C1,C2,C3)
t
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = !is.na(DateEntr) & ( ((DateSor == DateEntr + 1) & TimeSor > TimeEntr) |
DateSor > DateEntr + 1))
count(t,C3)
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = !is.na(DateEntr) & ( ((DateSor == DateEntr + 1) & TimeSor > TimeEntr) |
DateSor > DateEntr + 1),
TLPC = sum(C1,C2,C3)
)
count(t,TLPC)
t
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = !is.na(DateEntr) & ( ((DateSor == DateEntr + 1) & TimeSor > TimeEntr) |
DateSor > DateEntr + 1),
TLPC = C1 & C2 & C3
)
t
t
count(t,TLPC)
count(t,C1)
t <- t %>%
mutate(C1 = ind == 999,
C2 = Entr == Sor,
C3 = !is.na(DateEntr) & ( ((DateSor == DateEntr + 1) & TimeSor > TimeEntr) |
DateSor > DateEntr + 1),
TLPC = C1 | C2 | C3
)
count(t,TLPC)
count(t %>% filter(TLPC == TRUE) , ID)
count(t,C1)
count(t,C1,C2,C3)
t %>% filter(C1 == TRUE)
t.TLPC %>% count(ID) %>% rename(nC1=n) %>% count(nC1)
t
count(t,TLPC)
t %>% count(C1,C2)
t1 <- t %>% filter(C1 == TRUE) %>% rename(nC1 = n) %>% count(nC1)
t1 <- t %>% filter(C1 == TRUE) %>% count(C1) %>% rename(nC1 = n) %>% count(nC1)
t1
t %>% filter(C1 == TRUE) %>% count(C1)
t1 <- t %>% filter(C1 == TRUE) %>% ungroup %>% count(C1) %>% rename(nC1 = n) %>% count(nC1)
t %>% filter(C1 == TRUE) %>% count(C1)
t1
t1 <- t %>% filter(C1 == TRUE) %>% count(ID) %>% rename(nC1 = n) %>% count(nC1)
t1
t2 <- t %>% filter(C2 == TRUE) %>% count(ID) %>% rename(nC2 = n) %>% count(nC2)
t2
t1 <- t %>% group_by(ID) %>% summarise(nC1 = sum(C1), nC2 = sum(C2))
t1
count(t1,nC1)
count(t1,nC1,nC2)
t.TLPC <- t %>% filter(C1 == TRUE | C2 == TRUE)
t.TLPC
t.TLPC %>% count(ID)
t %>% filter(C1 == TRUE) %>% count(ID)
gc()
t.TLPC <- t %>% filter(C1 == TRUE | C2 == TRUE)
t.TLPC %>% count(Entr, Sor)
t1 <- t.TLPC %>% transmute(ID, Entr, Sor, DateSor, DOW, TimeSor)
t2 <- result %>% transmute(ID, RegularEntr= Entr, Sor, DOW, Tmin, Tmax, noPsg)
t3 <-t1 %>% left_join(t2, by = c("ID","Sor", "DOW"))
t3 <- t3 %>% mutate(TLPC = (TimeSor <= Tmax) &
(TimeSor >= Tmin) )
t3
count(t3,TLPC)
t1
t.TLPC
t.TLPC %>% count(ID)
t.TLPC %>% count(ID) %>% rename(no = n) %>% count(no)
t.TLPC %>% count(ID) %>% rename(no = n) %>% count(no)
t.TLPC
t.TLPC %>% count(ID)
t.TLPC %>% count(ID) %>% left_join(result %>% count(ID))
t.TLPC %>% count(ID) %>% left_join(result %>% count(ID) %>% rename(nR = n))
t.TLPC %>% count(ID) %>% left_join(result %>% count(ID) %>% rename(nR = n)) %>% count(is.na(nR))
t3
t3 %>% count(TLPC)
ACorriger <- t3 %>% filter(TLPC == TRUE) %>% select(ID:RegularEntr)
ACorriger
write.table(ACorriger, "ACorriger.csv",sep=";",row.name=FALSE,quote=FALSE)
library(dplyr)
library(ggplot2)
TLPC
count(TLPC, VOPEA)
