test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
models.units <- getModel.units( output )
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
test.model.0 <- GetResult(test, result.model.decade.0)
test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
ind.model.0$ModelDecade <- 0
test.model.0 <- GetResult(test, result.model.decade.0)
test.model.0$ModelDecade <- 0
test.model.0 <- GetResult(test, result.model.decade.0)
if (nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
ind.model.1
is.na(ind.model.1)
test.model.0
source('~/GitHub/SA_Script/Functions.R', encoding = 'UTF-8')
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
test.model.0 <- GetResult(test, result.model.decade.0)
if (nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
ind.model.0
input
ouput
output
models.units <- getModel.units( output )
#Model 0 (decades) : BENCHMARK
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
#Model 1 (decades)	Time-Space
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
### evalutaion model.01
test.model.1 <- GetResult(test, result.model.decade.1)
if(nrow(test.model.1) > 0) test.model.0$ModelDecade <- 1
ind.model.1 <- GetInd(test.model.1, result.model.decade.1)
if(nrow(ind.model.1) > 0)  ind.model.0$ModelDecade <- 1
#Model 2 (decades) OD -> Space -> Time
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.0$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.0$ModelDecade <- 2
### compare model results
Ind <- rbind(ind.model.0, ind.model.1, ind.model.2)
Ind <- inner_join ( Ind, models.units)
Ind.final <- Ind %>%
group_by(ID) %>%
summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])
result <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)
rm(result.model.decade.0, test.model.0, ind.model.0,
result.model.decade.1, test.model.1, ind.model.1,
result.model.decade.2, test.model.2, ind.model.2)
result.final <- inner_join(result, Ind.final) %>%
arrange (ID, desc(noPsg), Tmin) %>%
select(-Model) %>%
mutate(ID = as.character(as.numeric(ID))) %>%
filter(noPsg > 5)
rm(Ind, Ind.final, models.units)
rm(ID.list,
test,train,
test.period,train.period)
### output
write.table(result.final, OutputFileName,sep=";",row.name=FALSE,quote=FALSE)
source('~/GitHub/SA_Script/mainWithoutArgs.R')
### prepare period
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
models.units <- getModel.units( output )
#Model 0 (decades) : BENCHMARK
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
#Model 1 (decades)	Time-Space
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
### evalutaion model.01
test.model.1 <- GetResult(test, result.model.decade.1)
if(nrow(test.model.1) > 0) test.model.0$ModelDecade <- 1
ind.model.1 <- GetInd(test.model.1, result.model.decade.1)
if(nrow(ind.model.1) > 0)  ind.model.0$ModelDecade <- 1
#Model 2 (decades) OD -> Space -> Time
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.0$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.0$ModelDecade <- 2
### compare model results
Ind <- rbind(ind.model.0, ind.model.1, ind.model.2)
Ind <- inner_join ( Ind, models.units)
Ind.final <- Ind %>%
group_by(ID) %>%
summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])
result <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)
result.final <- inner_join(result, Ind.final) %>%
arrange (ID, desc(noPsg), Tmin) %>%
select(-Model) %>%
mutate(ID = as.character(as.numeric(ID))) %>%
filter(noPsg > 5)
write.table(result.final, OutputFileName,sep=";",row.name=FALSE,quote=FALSE)
rm(Ind, Ind.final, models.units)
rm(ID.list,
test,train,
test.period,train.period)
rm(result.model.decade.0, test.model.0, ind.model.0,
result.model.decade.1, test.model.1, ind.model.1,
result.model.decade.2, test.model.2, ind.model.2)
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
### model & eval
models.units <- getModel.units( output )
#Model 0 (decades) : BENCHMARK
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
#Model 1 (decades)	Time-Space
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
### evalutaion model.01
test.model.1 <- GetResult(test, result.model.decade.1)
if(nrow(test.model.1) > 0) test.model.0$ModelDecade <- 1
ind.model.1 <- GetInd(test.model.1, result.model.decade.1)
if(nrow(ind.model.1) > 0)  ind.model.0$ModelDecade <- 1
#Model 2 (decades) OD -> Space -> Time
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.0$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.0$ModelDecade <- 2
### compare model results
Ind <- rbind(ind.model.0, ind.model.1, ind.model.2)
Ind <- inner_join ( Ind, models.units)
Ind.final <- Ind %>%
group_by(ID) %>%
summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])
result <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)
rm(result.model.decade.0, test.model.0, ind.model.0,
result.model.decade.1, test.model.1, ind.model.1,
result.model.decade.2, test.model.2, ind.model.2)
result.final <- inner_join(result, Ind.final) %>%
arrange (ID, desc(noPsg), Tmin) %>%
select(-Model) %>%
mutate(ID = as.character(as.numeric(ID))) %>%
filter(noPsg > 5)
rm(Ind, Ind.final, models.units)
rm(ID.list,
test,train,
test.period,train.period)
### output
write.table(result.final, OutputFileName,sep=";",row.name=FALSE,quote=FALSE)
rm(list=ls())
source('~/GitHub/SA_Script/Functions.R', encoding = 'UTF-8')
source('~/GitHub/SA_Script/mainWithoutArgs.R')
test.model.00
test.model.0
test.model.1
source('~/GitHub/SA_Script/mainWithoutArgs.R')
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
models.units <- getModel.units( output )
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
test.model.1 <- GetResult(test, result.model.decade.1)
if(nrow(test.model.1) > 0) test.model.1$ModelDecade <- 1
ind.model.1 <- GetInd(test.model.1, result.model.decade.1)
if(nrow(ind.model.1) > 0)  ind.model.1$ModelDecade <- 1
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.2$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.2$ModelDecade <- 2
Ind <- rbind(ind.model.0, ind.model.1, ind.model.2)
Ind <- inner_join ( Ind, models.units)
Ind.final <- Ind %>%
group_by(ID) %>%
summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])
result <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)
str(result)
str(result.model.decade.0)
str(result.model.decade.1)
str(result.model.decade.2)
str(test.model.0)
str(test.model.1)
str(test.model.2)
str(Ind)
str(Ind.final)
result.final <- inner_join(result, Ind.final) %>%
arrange (ID, desc(noPsg), Tmin) %>%
select(-Model) %>%
mutate(ID = as.character(as.numeric(ID))) %>%
filter(noPsg > 5)
output
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.2$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.2$ModelDecade <- 2
test.model.2
result.model.decade.2
result.model.decade.2 %>% str
ID.list
ID.list %>% str
str(test.model.1)
str(result.model.decade.1)
test.model.1 <- GetResult(test, result.model.decade.1)
str(test)
test.model.1 <- GetResult(test, result.model.decade.1)
#Model 0 (decades) : BENCHMARK
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
test.model.1
output
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
### model & eval
models.units <- getModel.units( output )
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
#Model 1 (decades)	Time-Space
result.model.decade.1 <- Model.for.a.decade(train,1,models.units)
### evalutaion model.01
test.model.1 <- GetResult(test, result.model.decade.1)
if(nrow(test.model.1) > 0) test.model.1$ModelDecade <- 1
ind.model.1 <- GetInd(test.model.1, result.model.decade.1)
if(nrow(ind.model.1) > 0)  ind.model.1$ModelDecade <- 1
# Model 2 (decades) OD -> Space -> Time
result.model.decade.2 <- Model.for.a.decade(train,2,models.units)
### evalutaion model.02
test.model.2 <- GetResult(test, result.model.decade.2)
if(nrow(test.model.2) > 0) test.model.2$ModelDecade <- 2
ind.model.2 <- GetInd(test.model.2, result.model.decade.2)
if(nrow(ind.model.2) > 0)  ind.model.2$ModelDecade <- 2
Ind <- rbind(ind.model.0, ind.model.1, ind.model.2)
Ind <- inner_join ( Ind, models.units)
Ind.final <- Ind %>%
group_by(ID) %>%
summarise( Model = ModelDecade[Ind == max(Ind)][1]*10 + model[Ind == max(Ind)][1])
result <- rbind(result.model.decade.0, result.model.decade.1, result.model.decade.2)
rm(list=ls())
InputFileName <- "App.csv"
OutputFileName <- "Output.csv"
end <- as.Date("2015-8-31")
start <- as.Date("2015-5-1")
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
library(dplyr)
library(cluster)
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
input
trx <- input %>%
mutate(
ID = as.character(Badge * 100000 + Porteur),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
trx
count(trx,ID)
count(trx,Badge)
count(trx,Badge,Porteur)
count(trx,Badge) %>% arrange(Badge)
count(trx,Badge,Porteur) %>% arrange(Badge)
source('~/GitHub/SA_Script/mainWithoutArgs.R')
rm(list=ls())
InputFileName <- "VIP.csv"
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
input
trx <- input %>%
mutate(
ID = as.character(Badge * 100000 + Porteur),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
trx
trx <- trx %>% filter(Date >= start)
end <- as.Date("2015-8-31")
start <- as.Date("2015-5-1")
trx <- trx %>% filter(Date >= start)
ID <- trx %>%
group_by(ID) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n())
ID$Small <- FALSE
ID$Small[ID$noPsg < 10 | ID$Day < 5 | ID$Ddiff < 5] <- TRUE
### add Inactive =
#   F: always active
#   T: no trx after 30 days before end date
ID$Inactive <- FALSE
ID$Inactive[ID$Dmax < end - 30] <- TRUE
ID <- ID %>%
filter(Small == FALSE, Inactive == FALSE) %>%
select(ID)
trx <- inner_join(trx, ID)
rm(ID)
t <- trx %>%
group_by(ID, Entr, Sor, Sens) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n()
)
t$Small <- FALSE
t$Small[t$noPsg < 5 | t$Day < 5 | t$Ddiff < 5] <- TRUE
t$Inactive <- FALSE
t$Inactive[t$Dmax < end - 30] <- TRUE
t <- t %>%
filter(Small == FALSE & Inactive == FALSE) %>%
select(ID,Entr,Sor,Sens)
trx <- inner_join(trx,t)
rm(t)
sens = read.table("Ref_sens.csv",sep = ";", header=TRUE)
trx <- trx %>% mutate(Voie = ifelse(Entr == 0, Voie, 0))
trx <- trx %>% left_join(sens)
trx <- trx %>% mutate(SensEntr = ifelse(is.na(SensEntr), 0, SensEntr),
SensSor = ifelse(is.na(SensSor), 0, SensSor))
rm(sens)
trx <- trx %>% mutate(OD = paste0(Entr,"-",Sor,"-",SensEntr,"-",SensSor))
output <- trx
output
rm(trx)
count(input,Voie)
count(output,Voie)
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
### model & eval
models.units <- getModel.units( output )
source('Functions.R', encoding = 'UTF-8')
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
### model & eval
models.units <- getModel.units( output )
output
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
output
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
### load function
source('DataPreparation.R', encoding = 'UTF-8')
source('Functions.R', encoding = 'UTF-8')
####################
####################
### prepare period
train.period <- data.frame(Date = seq(start, end - 30, "day"))
train.period$DOW <- as.POSIXlt(train.period$Date)$wday
test.period <- data.frame(Date = seq(end - 30, end, "day"))
test.period$DOW <- as.POSIXlt(test.period$Date)$wday
### train & test
train <- output %>% filter(Date < end - 30)
test <- output %>% filter(Date >= end - 30)
ID.list <- output %>% group_by(ID) %>% summarise()
train
test
models.units <- getModel.units( output )
result.model.decade.0 <- Model.for.a.decade(train,0,models.units)
### evalutaion model.00
test.model.0 <- GetResult(test, result.model.decade.0)
if(nrow(test.model.0) > 0) test.model.0$ModelDecade <- 0
ind.model.0 <- GetInd(test.model.0, result.model.decade.0)
if(nrow(ind.model.0) > 0)  ind.model.0$ModelDecade <- 0
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
rm(list=ls())
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
InputFileName <- "VIP.csv"
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
input
source('DataPreparation.R', encoding = 'UTF-8')
input <- read.table(InputFileName, header = T, sep = ";") %>% tbl_df
source('DataPreparation.R', encoding = 'UTF-8')
OutputFileName <- "Output.csv"
trx <- input %>%
mutate(
ID = as.character(Badge * 100000 + Porteur),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
trx <- trx %>% filter(Date >= start)
end <- as.Date("2015-8-31")
start <- as.Date("2015-5-1")
source('DataPreparation.R', encoding = 'UTF-8')
write.table(output, OutputFileName,sep=";",row.name=FALSE,quote=FALSE)
source('DataPreparation.R', encoding = 'UTF-8')
class(start)
print(class(start))
print(end+ 10)
trx <- input %>%
mutate(
ID = as.character(Badge * 100000 + Porteur),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
trx <- trx %>% filter(Date >= start)
##########
### ID segmentation
##########
ID <- trx %>%
group_by(ID) %>%
summarise(Dmin = min(Date),
Dmax = max(Date),
Ddiff = Dmax - Dmin + 1,
Day = n_distinct(Date),
noPsg = n())
nrow(ID) > 1
ID
if(nrow(ID) > 0){
print("Markt 001")
### add small =
#   F:  history interesting
#   T:  nOD < 10
#       Day < 5
#       Ddiff < 5
ID$Small <- FALSE
ID$Small[ID$noPsg < 10 | ID$Day < 5 | ID$Ddiff < 5] <- TRUE
### add Inactive =
#   F: always active
#   T: no trx after 30 days before end date
ID$Inactive <- FALSE
ID$Inactive[ID$Dmax < end - 30] <- TRUE
### remove small and inactive
ID <- ID %>%
filter(Small == FALSE, Inactive == FALSE) %>%
select(ID)
trx <- inner_join(trx, ID, by = "ID")
# rm(ID)
}
ID
trx
source('~/GitHub/SA_Script/DataPreparation.R')
source('DataPreparation.R', encoding = 'UTF-8')
source('DataPreparation.R', encoding = 'UTF-8')
input
trx <- input %>%
mutate(
ID = as.character(Badge * 100000 + Porteur),
Date = as.Date(as.character(Date)),
Sens = ifelse(Entr == 0,
ifelse(Voie <=20, 1,2),
0))
trx <- trx %>% filter(Date >= start)
source('~/GitHub/SA_Script/mainWithoutArgs.R')
